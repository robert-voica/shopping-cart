/*! puppet.js version: 1.3.0
 * (c) 2013 Joachim Wester
 * MIT license
 */
!function(a){function b(a,b){var c;return c=b?new URL(b,window.location):new URL(window.location.href),c.protocol="https:"===c.protocol?"wss:":"ws:",Object.defineProperty(a,"wsURL",{value:c})}function c(a,c,d,e,f,g,h){this.puppet=a,this.remoteUrl=c instanceof URL?c:c?new URL(c,window.location.href):new URL(window.location.href),d&&b(this,c),e&&(this.onReceive=e),f&&(this.onSend=f),g&&(this.onError=g),h&&(this.onStateChange=h);var i=this;Object.defineProperty(this,"useWebSocket",{get:function(){return d},set:function(a){return 0==a?i._ws&&(i._ws.onclose=function(){i._ws=null},i._ws.close()):i.wsURL||b(this,c),d=a}})}function d(a){this.apply=a}function e(a){a||(a={}),this.debug=void 0!=a.debug?a.debug:!0,this.obj=a.obj||{},this.observer=null,this.onRemoteChange=a.onRemoteChange,this.onPatchReceived=a.onPatchReceived||function(){},this.onPatchSent=a.onPatchSent||function(){},this.onSocketStateChanged=a.onSocketStateChanged||function(){},this.network=new c(this,a.remoteUrl,a.useWebSocket||!1,this.handleRemoteChange.bind(this),this.onPatchSent.bind(this),this.handleRemoteError.bind(this),this.onSocketStateChanged.bind(this)),Object.defineProperty(this,"useWebSocket",{get:function(){return this.network.useWebSocket},set:function(a){this.network.useWebSocket=a}}),this.queue=a.localVersionPath?a.remoteVersionPath?a.ot?new JSONPatchOTAgent(JSONPatchOT.transform,[a.localVersionPath,a.remoteVersionPath],this.validateAndApplySequence.bind(this),a.purity):new JSONPatchQueue([a.localVersionPath,a.remoteVersionPath],this.validateAndApplySequence.bind(this),a.purity):new JSONPatchQueueSynchronous(a.localVersionPath,this.validateAndApplySequence.bind(this),a.purity):new d(this.validateAndApplySequence.bind(this)),this.ignoreCache=[],this.ignoreAdd=a.ignoreAdd||null;var b=a.callback,e=this;this.network.establish(function(a){var c=JSON.parse(a);i(e.obj,c),e.debug&&(e.remoteObj=a),h(e.obj),e.observe(),b&&b.call(e,e.obj)})}function f(a,b){var c=b.split("/"),d=c.length;if(d>2)for(var e=1;d-1>e;e++)a=a[c[e]];h(a[c[d-1]],d>1?a:void 0)}function g(a,b){void 0==b||a.hasOwnProperty("$parent")||Object.defineProperty(a,"$parent",{enumerable:!1,get:function(){return b}})}function h(a,b){var c;if(null!==a&&"object"==typeof a){g(a,b);for(var d in a)c=a[d],a.hasOwnProperty(d)&&h(c,a)}}function i(a,b){for(var c in b)b.hasOwnProperty(c)&&("object"==typeof b[c]&&a.hasOwnProperty(c)?i(a[c],b[c]):a[c]=b[c])}function j(a,b,c,d){if("add"===d&&a.test(c))return b[c]=!0,!0;for(var e=c.split("/"),f="",g=1,h=e.length;h>g;g++)if(f+="/"+e[g],b[f])return!0;return!1}var k=function(){};k.prototype={constructor:k,apply:function(a){a.addEventListener=k.prototype.addEventListener,a.hasEventListener=k.prototype.hasEventListener,a.removeEventListener=k.prototype.removeEventListener,a.dispatchEvent=k.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners,d=c[a];if(void 0!==d){var e=d.indexOf(b);-1!==e&&d.splice(e,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners,c=b[a.type];if(void 0!==c){a.target=this;for(var d=[],e=c.length,f=0;e>f;f++)d[f]=c[f];for(var f=0;e>f;f++)d[f].call(this,a)}}}},c.prototype.establish=function(a){var b=this;return this.xhr(this.remoteUrl.href,"application/json",null,function(c){return a(c.responseText),b.useWebSocket&&b.webSocketUpgrade(),b})},c.prototype.send=function(a){var b=this;if(this.useWebSocket&&this._ws&&1===this._ws.readyState)this._ws.send(a),b.onSend(a,b._ws.url,"WS");else{var c=this.remoteUrl.href;this.xhr(c,"application/json-patch+json",a,function(a,d){b.onReceive(a.responseText,c,d)})}return this},c.prototype.onReceive=function(){},c.prototype.onSend=function(){},c.prototype.onStateChange=function(){},c.prototype.upgrade=function(){},c.prototype.webSocketUpgrade=function(a){var b=this,c=new URL(this.remoteUrl.pathname,this.wsURL).href;b._ws=new WebSocket(c),b._ws.onopen=function(d){b.onStateChange(b._ws.readyState,c),a&&a(d)},b._ws.onmessage=function(a){b.onReceive(a.data,b._ws.url,"WS")},b._ws.onerror=function(a){throw b.onStateChange(b._ws.readyState,c,a.data),new Error("WebSocket connection could not be made."+(a.data||"")+"\nCould not connect to: "+c)},b._ws.onclose=function(a){b.onStateChange(b._ws.readyState,c,null,a.code,a.reason);var d=["WebSocket connection closed. Status code: ",a.code,"."];a.reason&&d.push(" Reason: ",a.reason),console.error(d.join(""))}},c.prototype.changeState=function(a){var b=this;return this.xhr(a,"application/json-patch+json",null,function(c,d){b.onReceive(c.responseText,a,d)},!0)},c.prototype.setRemoteUrl=function(a){if(this.remoteUrlSet&&this.remoteUrl&&this.remoteUrl.href!=a)throw new Error("Session lost. Server replied with a different session ID that was already set. \nPossibly a server restart happened while you were working. \nPlease reload the page.\n\nPrevious session ID: "+this.remoteUrl+"\nNew session ID: "+a);this.remoteUrlSet=!0,this.remoteUrl=new URL(a,this.remoteUrl.href)},c.prototype.handleResponseHeader=function(a){var b=a.getResponseHeader("X-Location")||a.getResponseHeader("Location");b&&this.setRemoteUrl(b)},c.prototype.xhr=function(a,b,c,d,e){var f=this,g=new XMLHttpRequest,h="GET";return g.onload=function(){var b=this;if(f.handleResponseHeader(b),b.status>=400&&b.status<=599)throw f.onError(JSON.stringify({statusCode:b.status,statusText:b.statusText,text:b.responseText}),a,h),new Error("PuppetJs JSON response error. Server responded with error "+b.status+" "+b.statusText+"\n\n"+b.responseText);d&&d.call(f.puppet,b,h)},a=a||window.location.href,c?(h="PATCH",g.open(h,a,!0),g.setRequestHeader("Content-Type","application/json-patch+json")):g.open(h,a,!0),b&&g.setRequestHeader("Accept",b),f.remoteUrl&&e&&g.setRequestHeader("X-Referer",f.remoteUrl.pathname),f.onSend(c,a,h),g.send(c),g},d.prototype.send=function(a){return a},d.prototype.receive=function(a,b){this.apply(a,b)},e.prototype=Object.create(k.prototype),e.prototype.observe=function(){this.observer=jsonpatch.observe(this.obj,this.filterChangedCallback.bind(this))},e.prototype.unobserve=function(){this.observer&&(jsonpatch.unobserve(this.obj,this.observer),this.observer=null)},e.prototype.filterChangedCallback=function(a){this.filterIgnoredPatches(a),a.length&&this.handleLocalChange(a)},e.prototype.filterIgnoredPatches=function(a){if(this.ignoreAdd)for(var b=0,c=a.length;c>b;b++)j(this.ignoreAdd,this.ignoreCache,a[b].path,a[b].op)&&(a.splice(b,1),c--,b--);return a},e.prototype.handleLocalChange=function(a){var b=this;this.debug&&this.validateSequence(this.remoteObj,a);var c=JSON.stringify(this.queue.send(a));if(c.indexOf("__Jasmine_been_here_before__")>-1)throw new Error("PuppetJs did not handle Jasmine test case correctly");this.network.send(c),this.unobserve(),a.forEach(function(a){f(b.obj,a.path)}),this.observe()},e.prototype.validateAndApplySequence=function(a,b){if(this.debug)try{jsonpatch.apply(a,b,!0)}catch(c){c.message="Incoming patch validation error: "+c.message;var d;if(ErrorEvent.prototype.initErrorEvent){var d=document.createEvent("ErrorEvent");d.initErrorEvent("error",!0,!0,c.message,"",""),Object.defineProperty(d,"error",{value:c})}else d=new ErrorEvent("error",{bubbles:!0,cancelable:!0,error:c});this.dispatchEvent(d)}else jsonpatch.apply(a,b)},e.prototype.validateSequence=function(a,b){var c=jsonpatch.validate(b,a);if(c){c.message="Outgoing patch validation error: "+c.message;var d;if(ErrorEvent.prototype.initErrorEvent){var d=document.createEvent("ErrorEvent");d.initErrorEvent("error",!0,!0,c.message,"",""),Object.defineProperty(d,"error",{value:c})}else d=new ErrorEvent("error",{bubbles:!0,cancelable:!0,error:c});this.dispatchEvent(d)}},e.prototype.handleRemoteError=function(a,b,c){this.onPatchReceived&&this.onPatchReceived(a,b,c)},e.prototype.showWarning=function(b,c){this.debug&&a.console&&console.warn&&(c&&(b+=" ("+c+")"),console.warn("PuppetJs warning: "+b))},e.prototype.handleRemoteChange=function(a,b,c){var d=JSON.parse(a||"[]"),e=this;this.onPatchReceived&&this.onPatchReceived(a,b,c),this.observer&&(this.unobserve(),this.queue.receive(this.obj,d),d.forEach(function(a){if(""===a.path){var b=JSON.stringify(d);b.length>103&&(b=b.substring(0,100)+"..."),e.showWarning("Server pushed patch that replaces the object root",b)}("add"===a.op||"replace"===a.op||"test"===a.op)&&f(e.obj,a.path)}),this.observe(),this.onRemoteChange&&this.onRemoteChange(d),this.debug&&(this.remoteObj=JSON.parse(JSON.stringify(this.obj))))},a.Puppet=e}(window);